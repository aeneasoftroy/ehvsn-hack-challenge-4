REM Some crypto example
REM This script converts ASCII characters into the ASCII value, then converts it using ROT5.
REM Done for EHVSN by Stephan van de Kerkhof
:BOF
REM SOME BASICS TO START OFF THE SCRIPT AND DISPLAY SOME INFO ABOUT IT:
@echo off&&color 0a&&title EHVSN Challenge #4&&CLS&&echo.
echo                         .                             .
echo                          \:=-.                   .-=;/
echo                           \()0`-._  `.   .'  _.-'0()/
echo                           (07"   ::.  \ /  .::   "70)
echo                            \_.'`-::::.(").::::-'`._/
echo                              `._... .q(_)p. ..._.'
echo                                ""-..-'^|-^|`-..-""
echo                                .""' .'^|=^|`. `"".
echo                              ,':0(o)./^|-^|\.(o)0:`.
echo                             (O :0 ::/ \_/ \:: 0: O)
echo                              \O `::/       \::' O/
echo                               ""--'         `--""
set /p choice=(E)ncrypt or (D)ecrypt: 
if /i [%choice%]==[e] goto :ENCRYPT
if /i [%choice%]==[d] goto :DECRYPT
goto :BOF

:ENCRYPT
set DECRYPTMODE=0
REM ASK THE USER FOR INPUT:
set /p input=Enter ASCII characters to encrypt: 

REM SET INPUT WITH A ']' TERMINATION CHARACTER AT THE END, ONLY 1 ']' TERMINATION CHARACTER BECAUSE WE PARSE PER 1 CHARACTER IN THIS TYPE OF CONVERSION
set input=%INPUT%]

REM THE MAIN LOOP WHERE THE MAGIC IS, :EXTRACT IS CALLED FOR EACH CHARACTER OF THE INPUT STRING
:EXTRACT

REM EXTRACT THE FIRST CHARACTER(S):
set i=%input:~0,1%

REM GET ASCII VALUE, "%~nx0" DETERMINES THE FILENAME OF THE CURRENT ACTIVE BATCH FILE:
for /F "tokens=1,2,3,4,5,6 delims=	" %%a in ('type "%~nx0"') do if "R	%%d"=="%%a	%i%" set ASCII=%%e
set STRING=%STRING%%ASCII%

REM REMOVE FIRST CHARACTER FROM INPUT:
set input=%input:~1%

REM END INPUT ON TERMINATION CHARACTER:
if "%input%"=="]" goto :DONE

goto :EXTRACT

:DONE

echo ASCII OUTPUT: %STRING%

:ROT5

REM SET STRING FROM LAST PROCEDURE TO INPUT FOR THE ROT5 PROCEDURE:
if [%DECRYPTMODE%]==[0] set INPUT=%STRING%
set STRING=

REM SET INPUT WITH A ']' TERMINATION CHARACTER AT THE END, ONLY 1 ']' TERMINATION CHARACTER BECAUSE WE PARSE PER 1 CHARACTER IN THIS TYPE OF CONVERSION
set input=%INPUT%]

REM THE MAIN LOOP WHERE THE MAGIC IS, :EXTRACTROT5 IS CALLED FOR EACH CHARACTER OF THE INPUT STRING
:EXTRACTROT5

REM EXTRACT THE FIRST CHARACTER(S)
set i=%input:~0,1%

REM GET ASCII VALUE, "%~nx0" DETERMINES THE FILENAME OF THE CURRENT ACTIVE BATCH FILE
for /F "tokens=1,2,3,4,5,6 delims=	" %%a in ('type "%~nx0"') do if "R	%%d"=="%%a	%i%" set ROT5=%%f
set STRING=%STRING%%ROT5%

REM REMOVE FIRST CHARACTER FROM INPUT
set input=%input:~1%

REM END INPUT ON TERMINATION CHARACTER
if "%input%"=="]" goto :DONEROT15

goto :EXTRACTROT5

:DONEROT15
if [%DECRYPTMODE%]==[1] goto :DECRYPTSTART
echo  ROT5 OUTPUT: %STRING%
if [%DECRYPTED%]==[1] echo ASCII OUTPUT: %STRING2%
pause
goto :EOF

:DECRYPT

REM ASK THE USER FOR INPUT:
set /p input=Enter string to decrypt: 

set DECRYPTMODE=1
set DECRYPTED=1

goto :ROT5

:DECRYPTSTART
REM SET INPUT WITH A ']]]' TERMINATION CHARACTER AT THE END, 3 ']]]' TERMINATION CHARACTER BECAUSE WE PARSE PER 3 CHARACTERS IN THIS TYPE OF CONVERSION
set input=%STRING%]]]

REM THE MAIN LOOP WHERE THE MAGIC IS, :EXTRACTDECRYPT IS CALLED FOR EACH GROUP OF CHARACTERS OF THE INPUT STRING
:EXTRACTDECRYPT

REM EXTRACT THE FIRST CHARACTER(S):
set i=%input:~0,3%

REM GET ASCII VALUE, "%~nx0" DETERMINES THE FILENAME OF THE CURRENT ACTIVE BATCH FILE:
for /F "tokens=1,2,3,4,5,6 delims=	" %%a in ('type "%~nx0"') do if "R	%%e"=="%%a	%i%" set ASCII=%%d
set STRING2=%STRING2%%ASCII%

REM REMOVE FIRST CHARACTER FROM INPUT:
set input=%input:~3%

REM END INPUT ON TERMINATION CHARACTER:
if "%input%"=="]]]" set DECRYPTMODE=0&&goto :DONEROT15

goto :EXTRACTDECRYPT

REM ASCII VALUE CONVERSION TABLE:
RECORD  HEX     BINARY        ASCII  ASCIIVALUE ROT5/13
R	00	00000000	 	000	
R	20	00100000		032	
R	21	00100001	!	033	
R	22	00100010	"	034	
X	23	00100011	#	035	
R	24	00100100	$	036	
R	25	00100101	%	037	
R	26	00100110	&	038	
R	27	00100111	'	039	
R	28	00101000	(	040	
R	29	00101001	)	041	
R	2B	00101011	+	043	
R	2C	00101100	,	044	
R	2D	00101101	-	045	
R	2E	00101110	.	046	
R	2F	00101111	/	047	
R	30	00110000	0	048	5
R	31	00110001	1	049	6
R	32	00110010	2	050	7
R	33	00110011	3	051	8
R	34	00110100	4	052	9
R	35	00110101	5	053	0
R	36	00110110	6	054	1
R	37	00110111	7	055	2
R	38	00111000	8	056	3
R	39	00111001	9	057	4
R	3A	00111010	:	058	
R	3B	00111011	;	059	
R	40	01000000	@	064	
R	41	01000001	A	065	N
R	42	01000010	B	066	O
R	43	01000011	C	067	P
R	44	01000100	D	068	Q
R	45	01000101	E	069	R
R	46	01000110	F	070	S
R	47	01000111	G	071	T
R	48	01001000	H	072	U
R	49	01001001	I	073	V
R	4A	01001010	J	074	W
R	4B	01001011	K	075	X
R	4C	01001100	L	076	Y
R	4D	01001101	M	077	Z
R	4E	01001110	N	078	A
R	4F	01001111	O	079	B
R	50	01010000	P	080	C
R	51	01010001	Q	081	D
R	52	01010010	R	082	E
R	53	01010011	S	083	F
R	54	01010100	T	084	G
R	55	01010101	U	085	H
R	56	01010110	V	086	I
R	57	01010111	W	087	J
R	58	01011000	X	088	K
R	59	01011001	Y	089	L
R	5A	01011010	Z	090	M
R	5B	01011011	[	091	
R	5C	01011100	\	092	
R	5D	01011101	]	093	
R	5F	01011111	_	095	
R	61	01100001	a	097	n
R	62	01100010	b	098	o
R	63	01100011	c	099	p
R	64	01100100	d	100	q
R	65	01100101	e	101	r
R	66	01100110	f	102	s
R	67	01100111	g	103	t
R	68	01101000	h	104	u
R	69	01101001	i	105	v
R	6A	01101010	j	106	w
R	6B	01101011	k	107	x
R	6C	01101100	l	108	y
R	6D	01101101	m	109	z
R	6E	01101110	n	110	a
R	6F	01101111	o	111	b
R	70	01110000	p	112	c
R	71	01110001	q	113	d
R	72	01110010	r	114	e
R	73	01110011	s	115	f
R	74	01110100	t	116	g
R	75	01110101	u	117	h
R	76	01110110	v	118	i
R	77	01110111	w	119	j
R	78	01111000	x	120	k
R	79	01111001	y	121	l
R	7A	01111010	z	122	m
R	7B	01111011	{	123	
R	7D	01111101	}	125	
R	7E	01111110	~	126	
:EOF